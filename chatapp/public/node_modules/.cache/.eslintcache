[{"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\pages\\Login.jsx":"3","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\pages\\Chat.jsx":"4","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\SetAvatar.jsx":"5","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\pages\\Register.jsx":"6","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\ChatContainer.jsx":"7","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\Contacts.jsx":"8","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\utils\\APIRoutes.js":"9","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\Welcome.jsx":"10","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\Logout.jsx":"11","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\ChatInput.jsx":"12","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\pages\\Home.jsx":"13"},{"size":218,"mtime":1685825920000,"results":"14","hashOfConfig":"15"},{"size":669,"mtime":1690365767442,"results":"16","hashOfConfig":"15"},{"size":3878,"mtime":1690366201999,"results":"17","hashOfConfig":"15"},{"size":2298,"mtime":1690266334101,"results":"18","hashOfConfig":"15"},{"size":4130,"mtime":1685825920000,"results":"19","hashOfConfig":"15"},{"size":4669,"mtime":1690365995811,"results":"20","hashOfConfig":"15"},{"size":4763,"mtime":1690268160034,"results":"21","hashOfConfig":"15"},{"size":3707,"mtime":1690264989640,"results":"22","hashOfConfig":"15"},{"size":456,"mtime":1685825920000,"results":"23","hashOfConfig":"15"},{"size":796,"mtime":1690201653128,"results":"24","hashOfConfig":"15"},{"size":956,"mtime":1685825920000,"results":"25","hashOfConfig":"15"},{"size":3430,"mtime":1690266026784,"results":"26","hashOfConfig":"15"},{"size":3670,"mtime":1690360477962,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1jachbi",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"31"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\index.js",[],[],["72","73"],"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\App.js",[],[],"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\pages\\Login.jsx",[],[],"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\pages\\Chat.jsx",["74","75","76","77"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { allUsersRoute, host } from \"../utils/APIRoutes\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\n\nexport default function Chat() {\n  const navigate = useNavigate();\n  const socket = useRef();\n  const [contacts, setContacts] = useState([]);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  useEffect(async () => {\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n      navigate(\"/login\");\n    } else {\n      setCurrentUser(\n        await JSON.parse(\n          localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n        )\n      );\n    }\n  }, []);\n  useEffect(() => {\n    if (currentUser) {\n      socket.current = io(host);\n      socket.current.emit(\"add-user\", currentUser._id);\n    }\n  }, [currentUser]);\n\n  useEffect(async () => {\n    if (currentUser) {\n      if (currentUser.isAvatarImageSet) {\n        const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n        setContacts(data.data);\n      } else {\n        navigate(\"/setAvatar\");\n      }\n    }\n  }, [currentUser]);\n  const handleChatChange = (chat) => {\n    setCurrentChat(chat);\n  };\n  return (\n    <>\n      <Container>\n        <div className=\"container\">\n          <Contacts contacts={contacts} changeChat={handleChatChange} />\n          {currentChat === undefined ? (\n            <Welcome />\n          ) : (\n            <ChatContainer currentChat={currentChat} socket={socket} />\n          )}\n        </div>\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #0c3458 ;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #0c243e;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\SetAvatar.jsx",["78","79","80","81"],[],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Buffer } from \"buffer\";\nimport loader from \"../assets/loader.gif\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nexport default function SetAvatar() {\n  const api = `https://api.multiavatar.com/4645646`;\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\",\n  };\n\n  useEffect(async () => {\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))\n      navigate(\"/login\");\n  }, []);\n\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(\n        localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n      );\n\n      const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar],\n      });\n\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\n          process.env.REACT_APP_LOCALHOST_KEY,\n          JSON.stringify(user)\n        );\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error setting avatar. Please try again.\", toastOptions);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    const data = [];\n    for (let i = 0; i < 4; i++) {\n      const image = await axios.get(\n        `${api}/${Math.round(Math.random() * 1000)}`\n      );\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n    setAvatars(data);\n    setIsLoading(false);\n  }, []);\n  return (\n    <>\n      {isLoading ? (\n        <Container>\n          <img src={loader} alt=\"loader\" className=\"loader\" />\n        </Container>\n      ) : (\n        <Container>\n          <div className=\"title-container\">\n            <h1>Pick an Avatar as your profile picture</h1>\n          </div>\n          <div className=\"avatars\">\n            {avatars.map((avatar, index) => {\n              return (\n                <div\n                  className={`avatar ${\n                    selectedAvatar === index ? \"selected\" : \"\"\n                  }`}\n                >\n                  <img\n                    src={`data:image/svg+xml;base64,${avatar}`}\n                    alt=\"avatar\"\n                    key={avatar}\n                    onClick={() => setSelectedAvatar(index)}\n                  />\n                </div>\n              );\n            })}\n          </div>\n          <button onClick={setProfilePicture} className=\"submit-btn\">\n            Set as Profile Picture\n          </button>\n          <ToastContainer />\n        </Container>\n      )}\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 3rem;\n  background-color: #131324;\n  height: 100vh;\n  width: 100vw;\n\n  .loader {\n    max-inline-size: 100%;\n  }\n\n  .title-container {\n    h1 {\n      color: white;\n    }\n  }\n  .avatars {\n    display: flex;\n    gap: 2rem;\n\n    .avatar {\n      border: 0.4rem solid transparent;\n      padding: 0.4rem;\n      border-radius: 5rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      img {\n        height: 6rem;\n        transition: 0.5s ease-in-out;\n      }\n    }\n    .selected {\n      border: 0.4rem solid #4e0eff;\n    }\n  }\n  .submit-btn {\n    background-color: #4e0eff;\n    color: white;\n    padding: 1rem 2rem;\n    border: none;\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 0.4rem;\n    font-size: 1rem;\n    text-transform: uppercase;\n    &:hover {\n      background-color: #4e0eff;\n    }\n  }\n`;\n","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\pages\\Register.jsx",[],[],"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\ChatContainer.jsx",[],[],"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\Contacts.jsx",["82"],[],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../assets/logo.png\";\n\nexport default function Contacts({ contacts, changeChat }) {\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(async () => {\n    const data = await JSON.parse(\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n    );\n    setCurrentUserName(data.username);\n    setCurrentUserImage(data.avatarImage);\n  }, []);\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n  return (\n    <>\n      {currentUserImage && currentUserImage && (\n        <Container>\n          <div className=\"brand\">\n            <img src={Logo} alt=\"logo\" />\n            <h3>ChatApp</h3>\n          </div>\n          <div className=\"contacts\">\n            {contacts.map((contact, index) => {\n              return (\n                <div\n                  key={contact._id}\n                  className={`contact ${\n                    index === currentSelected ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => changeCurrentChat(index, contact)}\n                >\n                  <div className=\"avatar\">\n                    <img\n                      src={`data:image/svg+xml;base64,${contact.avatarImage}`}\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"username\">\n                    <h3>{contact.username}</h3>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"current-user\">\n            <div className=\"avatar\">\n              <img\n                src={`data:image/svg+xml;base64,${currentUserImage}`}\n                alt=\"avatar\"\n              />\n            </div>\n            <div className=\"username\">\n              <h2>{currentUserName}</h2>\n            </div>\n          </div>\n        </Container>\n      )}\n    </>\n  );\n}\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 75% 15%;\n  overflow: hidden;\n  background-color: #080420;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    img {\n      height: 2rem;\n    }\n    h3 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.8rem;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .contact {\n      background-color: #ffffff34;\n      min-height: 5rem;\n      cursor: pointer;\n      width: 90%;\n      border-radius: 0.2rem;\n      padding: 0.4rem;\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n    .selected {\n      background-color: #9a86f3;\n    }\n  }\n\n  .current-user {\n    background-color: #0d0d30;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    .avatar {\n      img {\n        height: 4rem;\n        max-inline-size: 100%;\n      }\n    }\n    .username {\n      h2 {\n        color: white;\n      }\n    }\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      gap: 0.5rem;\n      .username {\n        h2 {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;\n","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\utils\\APIRoutes.js",[],[],"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\Welcome.jsx",["83"],[],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Robot from \"../assets/robot.gif\";\nexport default function Welcome() {\n  const [userName, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(\n        localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n      ).username\n    );\n  }, []);\n  return (\n    <Container>\n      <img src={Robot} alt=\"\" />\n      <h1>\n        Welcome, <span>{userName}!</span>\n      </h1>\n      <h3>Please select a chat to Start messaging.</h3>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  flex-direction: column;\n  img {\n    height: 20rem;\n  }\n  span {\n    color: #1c98f7;\n  }\n`;\n","C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\Logout.jsx",[],[],"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\components\\ChatInput.jsx",[],[],"C:\\Users\\Admin\\Desktop\\ChatApp\\chatapp\\public\\src\\pages\\Home.jsx",[],[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":17,"column":13,"nodeType":"90","endLine":27,"endColumn":4},{"ruleId":"88","severity":1,"message":"91","line":27,"column":6,"nodeType":"92","endLine":27,"endColumn":8,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"89","line":35,"column":13,"nodeType":"90","endLine":44,"endColumn":4},{"ruleId":"88","severity":1,"message":"91","line":44,"column":6,"nodeType":"92","endLine":44,"endColumn":19,"suggestions":"94"},{"ruleId":"88","severity":1,"message":"89","line":24,"column":13,"nodeType":"90","endLine":27,"endColumn":4},{"ruleId":"88","severity":1,"message":"91","line":27,"column":6,"nodeType":"92","endLine":27,"endColumn":8,"suggestions":"95"},{"ruleId":"88","severity":1,"message":"89","line":55,"column":13,"nodeType":"90","endLine":66,"endColumn":4},{"ruleId":"88","severity":1,"message":"96","line":66,"column":6,"nodeType":"92","endLine":66,"endColumn":8,"suggestions":"97"},{"ruleId":"88","severity":1,"message":"89","line":9,"column":13,"nodeType":"90","endLine":15,"endColumn":4},{"ruleId":"88","severity":1,"message":"89","line":6,"column":13,"nodeType":"90","endLine":12,"endColumn":4},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["100"],["101"],["102"],"React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"104","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [navigate]",{"range":"111","text":"112"},"Update the dependencies array to be: [currentUser, navigate]",{"range":"113","text":"114"},{"range":"115","text":"112"},"Update the dependencies array to be: [api]",{"range":"116","text":"117"},[967,969],"[navigate]",[1398,1411],"[currentUser, navigate]",[961,963],[2044,2046],"[api]"]