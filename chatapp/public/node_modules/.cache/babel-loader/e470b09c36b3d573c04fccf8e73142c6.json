{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ChatApp\\\\chatapp\\\\public\\\\src\\\\components\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { sendMessageRoute, recieveMessageRoute } from \"../utils/APIRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer(_ref) {\n  _s();\n\n  let {\n    currentChat,\n    socket\n  } = _ref;\n  // const [currentChat, setCurrentChat] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const scrollRef = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n      const response = await axios.post(recieveMessageRoute, {\n        from: data._id,\n        to: currentChat._id\n      });\n      setMessages(response.data);\n    };\n\n    fetchData();\n  }, [currentChat]);\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        const data = JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)); // Use the data variable as needed.\n      }\n    };\n\n    getCurrentChat();\n  }, [currentChat]);\n\n  const handleSendMsg = async msg => {\n    const data = JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n    socket.current.emit('send-msg', {\n      to: currentChat._id,\n      from: data._id,\n      msg\n    });\n    await axios.post(sendMessageRoute, {\n      from: data._id,\n      to: currentChat._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on('msg-recieve', msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentChat.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map(message => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: scrollRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content \",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      handleSendMsg: handleSendMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatContainer, \"G0lk13xrHgkwZ5K6rUm11zKbNKM=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/ChatApp/chatapp/public/src/components/ChatContainer.jsx"],"names":["React","useState","useEffect","useRef","styled","ChatInput","Logout","v4","uuidv4","axios","sendMessageRoute","recieveMessageRoute","ChatContainer","currentChat","socket","messages","setMessages","scrollRef","arrivalMessage","setArrivalMessage","fetchData","data","JSON","parse","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","response","post","from","_id","to","getCurrentChat","handleSendMsg","msg","current","emit","message","msgs","push","fromSelf","on","prev","scrollIntoView","behavior","avatarImage","username","map","Container","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { sendMessageRoute, recieveMessageRoute } from \"../utils/APIRoutes\";\n\nexport default function ChatContainer({ currentChat, socket }) {\n  // const [currentChat, setCurrentChat] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const scrollRef = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n      const response = await axios.post(recieveMessageRoute, {\n        from: data._id,\n        to: currentChat._id,\n      });\n      setMessages(response.data);\n    };\n\n    fetchData();\n  }, [currentChat]);\n\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        const data = JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n        // Use the data variable as needed.\n      }\n    };\n    getCurrentChat();\n  }, [currentChat]);\n\n  const handleSendMsg = async (msg) => {\n    const data = JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n    socket.current.emit('send-msg', {\n      to: currentChat._id,\n      from: data._id,\n      msg,\n    });\n    await axios.post(sendMessageRoute, {\n      from: data._id,\n      to: currentChat._id,\n      message: msg,\n    });\n\n    const msgs = [...messages];\n    msgs.push({ fromSelf: true, message: msg });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on('msg-recieve', (msg) => {\n        setArrivalMessage({ fromSelf: false, message: msg });\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <Container>\n      <div className=\"chat-header\">\n        <div className=\"user-details\">\n          <div className=\"avatar\">\n            <img\n              src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n              alt=\"\"\n            />\n          </div>\n          <div className=\"username\">\n            <h3>{currentChat.username}</h3>\n          </div>\n        </div>\n        <Logout />\n      </div>\n      <div className=\"chat-messages\">\n        {messages.map((message) => {\n          return (\n            <div ref={scrollRef} key={uuidv4()}>\n              <div\n                className={`message ${\n                  message.fromSelf ? \"sended\" : \"recieved\"\n                }`}\n              >\n                <div className=\"content \">\n                  <p>{message.message}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <ChatInput handleSendMsg={handleSendMsg} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}